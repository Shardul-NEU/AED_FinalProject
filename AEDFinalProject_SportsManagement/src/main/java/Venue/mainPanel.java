/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Venue;

import Model.Venue;
import Model.database;
import com.mongodb.client.MongoCursor;
import static com.mongodb.client.model.Filters.eq;
import static com.mongodb.client.model.Updates.combine;
import static com.mongodb.client.model.Updates.set;
import javax.swing.JOptionPane;
import org.bson.Document;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author Shardul
 */
public class mainPanel extends javax.swing.JPanel {


/**
     * Creates new form mainPanel
     */
        //creates a new db connection
    database db = new database(); 
    
    // code to update the table on the page
    
    private void tableUpdate(){
        String[] columnNames = {"UserId", "Name", "Phone", "Email"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);
        MongoCursor<Document> cursor = db.maintenanceStaff.find().iterator();
        while (cursor.hasNext()) {
            Object obj = cursor.next();
            Document dc = (Document) obj;
            String UserId = (String)dc.get("UserId");
            String Name = (String)dc.get("Name");
            Long Phone  = (Long)dc.get("Phone");
            String Email = (String)dc.get("Email");
            model.addRow(new Object[] {UserId, Name, Phone, Email });
        }
        mainTable.setModel(model);
    }

    public mainPanel(Venue venue) {
        initComponents();

        tableUpdate();
    }
    
    //method to clear text fields in the page
    private void clearFields(){
        mainUserIdTextF.setText("");
        mainNameTextF.setText("");
        mainPasswordTextF.setText("");
        mainPhoneTextF.setText("");
        mainEmailTextF.setText("");
    }
    
    private Document selectedRowData(int rowSelected){
    String key = mainTable.getColumnName(0);
        MongoCursor<Document> cursor = db.maintenanceStaff.find().iterator();
        Document result = new Document();
        while (cursor.hasNext()) {
            Object obj = cursor.next();
            Document dc = (Document) obj;
            String check = dc.getString(key);
            for(String value = mainTable.getValueAt(rowSelected, 0).toString();check.equals(value);){
//            System.out.println(value);
//            System.out.println(dc);
            result = dc;
            break;
            }
        }
        return result;
    }
    
    private void resetFields(Document dc){
        mainUserIdTextF.setText(dc.getString("UserId"));
        mainNameTextF.setText(dc.getString("Name"));
        mainPasswordTextF.setText(dc.getString("Password"));
        mainPhoneTextF.setText(dc.getLong("Phone").toString());
        mainEmailTextF.setText(dc.getString("Email"));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainNameTextF = new javax.swing.JTextField();
        mainDeleteButton = new javax.swing.JButton();
        mainPasswordTextF = new javax.swing.JTextField();
        mainPhoneTextF = new javax.swing.JTextField();
        mainEmailTextF = new javax.swing.JTextField();
        mainHedingLabel = new javax.swing.JLabel();
        mainSearchTextF = new javax.swing.JTextField();
        mainUserIDLabel = new javax.swing.JLabel();
        mainSearchButton = new javax.swing.JButton();
        mainPasswordLabel = new javax.swing.JLabel();
        mainCreateButton = new javax.swing.JButton();
        mainNameLabel = new javax.swing.JLabel();
        mainUpdateButton = new javax.swing.JButton();
        mainPhoneLabel = new javax.swing.JLabel();
        mainEmailLabel = new javax.swing.JLabel();
        mainUserIdTextF = new javax.swing.JTextField();
        mainViewButton = new javax.swing.JButton();
        secScrollPane = new javax.swing.JScrollPane();
        mainTable = new javax.swing.JTable();
        mainCancelButton = new javax.swing.JButton();

        mainNameTextF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainNameTextFActionPerformed(evt);
            }
        });

        mainDeleteButton.setText("Delete");
        mainDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainDeleteButtonActionPerformed(evt);
            }
        });

        mainPasswordTextF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainPasswordTextFActionPerformed(evt);
            }
        });

        mainHedingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mainHedingLabel.setText("Maintenance Staff");
        mainHedingLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        mainSearchTextF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainSearchTextFActionPerformed(evt);
            }
        });

        mainUserIDLabel.setText("User ID");

        mainSearchButton.setText("Search");
        mainSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainSearchButtonActionPerformed(evt);
            }
        });

        mainPasswordLabel.setText("Password");

        mainCreateButton.setText("Create");
        mainCreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainCreateButtonActionPerformed(evt);
            }
        });

        mainNameLabel.setText("Name");

        mainUpdateButton.setText("Update");
        mainUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainUpdateButtonActionPerformed(evt);
            }
        });

        mainPhoneLabel.setText("Phone");

        mainEmailLabel.setText("Email");

        mainUserIdTextF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainUserIdTextFActionPerformed(evt);
            }
        });

        mainViewButton.setText("View");
        mainViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainViewButtonActionPerformed(evt);
            }
        });

        mainTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "UserId", "Name", "Phone", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        mainTable.getTableHeader().setReorderingAllowed(false);
        secScrollPane.setViewportView(mainTable);

        mainCancelButton.setText("Cancel");
        mainCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainCancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mainHedingLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(mainSearchTextF, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(mainSearchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(mainCreateButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(mainViewButton)
                                .addGap(18, 18, 18)
                                .addComponent(mainUpdateButton)
                                .addGap(18, 18, 18)
                                .addComponent(mainDeleteButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(mainCancelButton))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(mainEmailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(mainEmailTextF))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(mainPhoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(mainPhoneTextF))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(mainUserIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(mainUserIdTextF, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(mainNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(mainPasswordLabel))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(mainPasswordTextF)
                                            .addComponent(mainNameTextF))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(secScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 79, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(mainHedingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mainSearchTextF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mainSearchButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mainUserIDLabel)
                            .addComponent(mainUserIdTextF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mainNameLabel)
                            .addComponent(mainNameTextF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mainPasswordLabel)
                            .addComponent(mainPasswordTextF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mainPhoneLabel)
                            .addComponent(mainPhoneTextF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mainEmailLabel)
                            .addComponent(mainEmailTextF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(secScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mainCreateButton)
                    .addComponent(mainViewButton)
                    .addComponent(mainDeleteButton)
                    .addComponent(mainUpdateButton)
                    .addComponent(mainCancelButton))
                .addContainerGap(61, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void mainPasswordTextFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainPasswordTextFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mainPasswordTextFActionPerformed

    private void mainSearchTextFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainSearchTextFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mainSearchTextFActionPerformed

    private void mainCreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainCreateButtonActionPerformed
        // TODO add your handling code here:
//        venue.setMainId(mainUserIdTextF.getText());
//        venue.setMainName(mainNameTextF.getText());
//        venue.setMainPassword(mainPasswordTextF.getText());
//        long phone = Long.parseLong(mainPhoneTextF.getText());
//        //venue.setMainPhone(phone);
//        venue.setMainEmail(mainEmailTextF.getText()); 
        
        String check ="";
        String selected= mainUserIdTextF.getText();
        if (selected.equals(check)) {
            JOptionPane.showMessageDialog(this, "Create Unsuccessful : Blank Fields Found");
        }
        else {
        Document mainStaff = new Document();
        mainStaff.put("UserId",mainUserIdTextF.getText());
        mainStaff.put("Name",mainNameTextF.getText());
        mainStaff.put("Password",mainPasswordTextF.getText());
        long phone = Long.parseLong(mainPhoneTextF.getText());
        mainStaff.put("Phone",phone);
        mainStaff.put("Email",mainEmailTextF.getText());
        db.maintenanceStaff.insertOne(mainStaff);
        
        JOptionPane.showMessageDialog(this,"Maintenance Staff Information Created");
        tableUpdate();
        clearFields();
        }
    }//GEN-LAST:event_mainCreateButtonActionPerformed

    private void mainUserIdTextFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainUserIdTextFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mainUserIdTextFActionPerformed

    private void mainViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainViewButtonActionPerformed
        // TODO add your handling code here:
        int selectedIndex= mainTable.getSelectedRow();
        if (selectedIndex<0) {
            JOptionPane.showMessageDialog(this, "Select a row to view details");
        }
        else{
        Document dc = selectedRowData(selectedIndex);
        resetFields(dc);
       }
    }//GEN-LAST:event_mainViewButtonActionPerformed

    private void mainUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainUpdateButtonActionPerformed
  // TODO add your handling code here:
  String check = "";
  String selected= mainUserIdTextF.getText();
        if (selected.equals(check)) {
            JOptionPane.showMessageDialog(this, "Please view the data to update");
        }
       else{
       long Phone = Long.parseLong(mainPhoneTextF.getText());
         db.maintenanceStaff.updateOne(
              eq("UserId",mainUserIdTextF.getText()),
                combine(set("Name",mainNameTextF.getText()), set("Password", mainPasswordTextF.getText()),
                        set("Phone",Phone), set("Email",mainEmailTextF.getText())));
        tableUpdate();
        JOptionPane.showMessageDialog(this,"Update Successful");
        clearFields();
        }
    }//GEN-LAST:event_mainUpdateButtonActionPerformed

    private void mainDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainDeleteButtonActionPerformed
        // TODO add your handling code here:
        int selectedIndex= mainTable.getSelectedRow();
        if (selectedIndex<0) {
            JOptionPane.showMessageDialog(this, "Select a row to delete");
        }
        else{
        String value = mainTable.getValueAt(selectedIndex, 0).toString();
        db.maintenanceStaff.deleteOne(eq("UserId",value));
        tableUpdate();
        JOptionPane.showMessageDialog(this,"Selected row is deleted");
        clearFields();
        }
    }//GEN-LAST:event_mainDeleteButtonActionPerformed

    private void mainNameTextFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainNameTextFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mainNameTextFActionPerformed

    private void mainCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainCancelButtonActionPerformed
        // TODO add your handling code here:
        clearFields();
        tableUpdate();
    }//GEN-LAST:event_mainCancelButtonActionPerformed

    private void mainSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainSearchButtonActionPerformed
//        // TODO add your handling code here:
//        String example = "ksjs";
//        MongoCursor<Document> cursor = db.maintenanceStaff.find(Filters.text(example)).iterator();
//        while(cursor.hasNext())
////        Object doc = db.maintenanceStaff.find(Filters.text(example));
//        System.out.println(doc);
    }//GEN-LAST:event_mainSearchButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton mainCancelButton;
    private javax.swing.JButton mainCreateButton;
    private javax.swing.JButton mainDeleteButton;
    private javax.swing.JLabel mainEmailLabel;
    private javax.swing.JTextField mainEmailTextF;
    private javax.swing.JLabel mainHedingLabel;
    private javax.swing.JLabel mainNameLabel;
    private javax.swing.JTextField mainNameTextF;
    private javax.swing.JLabel mainPasswordLabel;
    private javax.swing.JTextField mainPasswordTextF;
    private javax.swing.JLabel mainPhoneLabel;
    private javax.swing.JTextField mainPhoneTextF;
    private javax.swing.JButton mainSearchButton;
    private javax.swing.JTextField mainSearchTextF;
    private javax.swing.JTable mainTable;
    private javax.swing.JButton mainUpdateButton;
    private javax.swing.JLabel mainUserIDLabel;
    private javax.swing.JTextField mainUserIdTextF;
    private javax.swing.JButton mainViewButton;
    private javax.swing.JScrollPane secScrollPane;
    // End of variables declaration//GEN-END:variables
}
