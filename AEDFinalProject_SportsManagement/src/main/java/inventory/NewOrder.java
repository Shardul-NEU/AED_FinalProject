/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package inventory;

import Model.InventoryOrder;
import com.google.gson.Gson;
import com.mongodb.BasicDBObject;
import com.mongodb.util.JSON;
import database.CRUDDatabase;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import org.bson.Document;
import org.bson.types.ObjectId;

/**
 *
 * @author priyankakhimyani
 */
public class NewOrder extends javax.swing.JFrame {

    /**
     * Creates new form NewOrder
     */
    String item = "";
    String game = "";
    public NewOrder(String item, String game) {
        this.item = item;
        this.game = game;
        initComponents();
        setVisible(true);
        fillBrands();
    }
    
    public void fillBrands(){
        
        
        switch (this.item) {
            case "ball":
                String[] ballBrands = {"Spalding", "Under Armour", "Wilson", "Molten", "Baden"};
                loopBrands(ballBrands);
                break;
            case "ringsnrims":
                String[] ringsBrand = {"Bison", "Gared", "First Team", "Rvyal Hoops"};
                loopBrands(ringsBrand);
                break;
            case "backboard":
                String[]  bkcBrand = {"Silver Back", "Go Plus", "Franklin"};
                loopBrands(bkcBrand);
                break; 
            case "shoes":
                String[]  shoesBrand = {"Nike", "Puma", "Under Armour", "Jordan", "New Balance"};
                loopBrands(shoesBrand);
                break;
            case "jersey":
                String[]  jerseyBrand = {"Nike", "Puma", "Under Armour", "Old Navy"};
                loopBrands(jerseyBrand);
                break;
            case "nets":
                String[]  netsBrand = {"ProSlam", "Champion", "Wilson", "Neijiang"};
                loopBrands(netsBrand);
                break;
            case "helmet":
                String[]  helmetBrand = {"CCM", "Bauer Prodigy", "Warrior Covert"};
                loopBrands(helmetBrand);
                break;
            case "gloves":
                String[]  gloveBrand = {"Bauer", "CCM", "Warrior Covert", "True"};
                loopBrands(gloveBrand);
                break;
            case "pads":
                String[]  padsBrand = {"Bauer Vapor", "CCM", "Warrior Aplha"};
                loopBrands(padsBrand);
                break;
            case "skates":
                String[]  skatesBrand = {"Bauer Supreme", "CCM Tasks", "True TF9", "Graf"};
                loopBrands(skatesBrand);
                break;
            case "sticks":
                String[]  sticksBrand = {"STX", "Graf", "Vaughn", "Easton"};
                loopBrands(sticksBrand);
                break;
            case "guards":
                String[]  guardBrand = {"Sisu", "Shock", "Under Armour", "NXTRND"};
                loopBrands(guardBrand);
                break;
            
            default:
                throw new AssertionError();
        }
    
     
     
    
    }
    
    public void loopBrands(String[] brandNames){
    
        for( int i =0; i< brandNames.length; i++){

             brandsfield.addItem(brandNames[i]);
         }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        SpinnerModel sm = new SpinnerNumberModel(0, 0, 10, 1);
        countSpinner = new javax.swing.JSpinner(sm);
        jLabel2 = new javax.swing.JLabel();
        brandsfield = new javax.swing.JComboBox<>();
        placeOrderBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel1.setBackground(new java.awt.Color(239, 239, 208));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Count");
        jLabel1.setFont(new Font("Serif", Font.PLAIN, 20));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Brand");
        jLabel2.setFont(new Font("Serif", Font.PLAIN, 20));

        brandsfield.setBackground(new java.awt.Color(255, 251, 235));
        brandsfield.setModel(new javax.swing.DefaultComboBoxModel<>());
        brandsfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brandsfieldActionPerformed(evt);
            }
        });

        placeOrderBtn.setBackground(new java.awt.Color(255, 251, 235));
        placeOrderBtn.setText("Place Order");
        placeOrderBtn.setFont(new Font("Serif", Font.PLAIN, 20));
        placeOrderBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                placeOrderBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(brandsfield, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(countSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(placeOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(153, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(85, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(countSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(brandsfield, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(76, 76, 76)
                .addComponent(placeOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void placeOrderBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_placeOrderBtnMouseClicked
        // TODO add your handling code here:
        
        // Fetching Current date
        Date date = new Date();
        SimpleDateFormat DateFor = new SimpleDateFormat("MM/dd/yyyy");
        String stringDate = DateFor.format(date);

        
        // Adding data into POJO class
        InventoryOrder bb = new InventoryOrder("Admin", (Integer) countSpinner.getValue(), brandsfield.getSelectedItem().toString(), stringDate);
        
        Gson gson = new Gson();
        // converting class object to GSON
        BasicDBObject obj = (BasicDBObject)JSON.parse(gson.toJson(bb));
        
        // Creating instance
        CRUDDatabase db = new CRUDDatabase();
        Document ballDoc = new CRUDDatabase().getRecordByTwoKeys("game", this.game, "item", this.item, "inventory");
        
        // updating new order in database
        int result = db.addInArrayById((ObjectId) ballDoc.get("_id"), obj, "orders", "inventory");
        
        if(result > 0){
                JOptionPane.showMessageDialog(this,
            "order was placed successfully",
            "Order  Created",
            JOptionPane.INFORMATION_MESSAGE);
                
                setVisible(false);
                dispose();
            }else{
                JOptionPane.showMessageDialog(this,
                 "Error while placing order",
            "New Order",
            JOptionPane.ERROR_MESSAGE);
            }
            
    }//GEN-LAST:event_placeOrderBtnMouseClicked

    private void brandsfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brandsfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_brandsfieldActionPerformed

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> brandsfield;
    private javax.swing.JSpinner countSpinner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton placeOrderBtn;
    // End of variables declaration//GEN-END:variables
}
