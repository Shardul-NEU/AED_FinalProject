/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view.venue;

import model.Venue;
import model.database;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoCursor;
import static com.mongodb.client.model.Filters.eq;
import static com.mongodb.client.model.Updates.combine;
import static com.mongodb.client.model.Updates.set;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.bson.Document;

/**
 *
 * @author Shardul
 */
public class shiftsPanel extends javax.swing.JPanel {

    /**
     * Creates new form ShiftsPanel
     */
    // creates an instance of database
    database db = new database();
    
    // code to update the table on the page
    
    private void tableUpdate(MongoCollection<Document> doc, JTable table){
        String[] columnNames = {"Name", "Phone","Shift", "Location"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);
        MongoCursor<Document> cursor = doc.find().iterator();
        while (cursor.hasNext()) {
            Object obj = cursor.next();
            Document dc = (Document) obj;
            String Name = (String)dc.get("Name");
            Long Phone  = (Long)dc.get("Phone");
            String Shift = (String)dc.get("Shift");
            String Location = (String)dc.get("Location");
            model.addRow(new Object[] {Name,Phone,Shift,Location});
        }
        table.setModel(model);
    } 
    
    public shiftsPanel(Venue venue) {
        initComponents();
        tableUpdate(db.mainShift,mainShiftTable);
        tableUpdate(db.secShift,secShiftTable);
        }
    private void clearFields(){
        secShiftNameTextF.setText("*Name*");
        secShiftShiftTextF.setText("*Phone*");
        secShiftPhoneTextF.setText("*Shift*");
        secShiftLocationTextF.setText("*Location*");
        mainShiftNameTextF.setText("*Name*");
        mainShiftShiftTextF.setText("*Phone*");
        mainShiftPhoneTextF.setText("*Shift*");
        mainShiftLocationTextF.setText("*Location*");
    }
    
    private Document selectedRowData(MongoCollection<Document> doc,JTable table, int rowSelected){
    String key = table.getColumnName(0);
        MongoCursor<Document> cursor = doc.find().iterator();
        Document result = new Document();
        while (cursor.hasNext()) {
            Object obj = cursor.next();
            Document dc = (Document) obj;
            String check = dc.getString(key);
            for(String value = table.getValueAt(rowSelected, 0).toString();check.equals(value);){
//            System.out.println(value);
//            System.out.println(dc);
            result = dc;
            break;
            }
        }
        return result;
    }
    
    private void secShiftResetFields(Document dc){
        secShiftNameTextF.setText(dc.getString("Name"));
        secShiftShiftTextF.setText(dc.getString("Shift"));
        secShiftLocationTextF.setText(dc.getString("Location"));
        secShiftPhoneTextF.setText(dc.getLong("Phone").toString());
    }
    private void mainShiftResetFields(Document dc){
        mainShiftNameTextF.setText(dc.getString("Name"));
        mainShiftShiftTextF.setText(dc.getString("Shift"));
        mainShiftLocationTextF.setText(dc.getString("Location"));
        mainShiftPhoneTextF.setText(dc.getLong("Phone").toString());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        secShiftTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        mainShiftTable = new javax.swing.JTable();
        shiftHeading = new javax.swing.JLabel();
        shiftSubHeading1 = new javax.swing.JLabel();
        shiftSubHeading2 = new javax.swing.JLabel();
        mainShiftNameTextF = new javax.swing.JTextField();
        mainShiftPhoneTextF = new javax.swing.JTextField();
        mainShiftShiftTextF = new javax.swing.JTextField();
        mainShiftLocationTextF = new javax.swing.JTextField();
        mainShiftCreateButton = new javax.swing.JButton();
        mainShiftUpdateButton = new javax.swing.JButton();
        secShiftNameTextF = new javax.swing.JTextField();
        secShiftPhoneTextF = new javax.swing.JTextField();
        secShiftShiftTextF = new javax.swing.JTextField();
        secShiftLocationTextF = new javax.swing.JTextField();
        secShiftUpdateButton = new javax.swing.JButton();
        secShiftCreateButton = new javax.swing.JButton();
        mainShiftViewButton = new javax.swing.JButton();
        mainShiftDeleteButton = new javax.swing.JButton();
        secShiftViewButton = new javax.swing.JButton();
        secShiftDeleteButton = new javax.swing.JButton();

        secShiftTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Phone", "Shift", "Location"
            }
        ));
        jScrollPane1.setViewportView(secShiftTable);

        mainShiftTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Phone", "Shift", "Location"
            }
        ));
        jScrollPane2.setViewportView(mainShiftTable);

        shiftHeading.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        shiftHeading.setText("Shift Details");

        shiftSubHeading1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        shiftSubHeading1.setText("Maintenance Shifts");

        shiftSubHeading2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        shiftSubHeading2.setText("Security Shifts");

        mainShiftNameTextF.setText("*Name*");
        mainShiftNameTextF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainShiftNameTextFActionPerformed(evt);
            }
        });

        mainShiftPhoneTextF.setText("*Phone*");
        mainShiftPhoneTextF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainShiftPhoneTextFActionPerformed(evt);
            }
        });

        mainShiftShiftTextF.setText("*Shift*");

        mainShiftLocationTextF.setText("*Location*");

        mainShiftCreateButton.setText("Create");
        mainShiftCreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainShiftCreateButtonActionPerformed(evt);
            }
        });

        mainShiftUpdateButton.setText("Update");
        mainShiftUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainShiftUpdateButtonActionPerformed(evt);
            }
        });

        secShiftNameTextF.setText("*Name*");

        secShiftPhoneTextF.setText("*Phone*");

        secShiftShiftTextF.setText("*Shift*");
        secShiftShiftTextF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secShiftShiftTextFActionPerformed(evt);
            }
        });

        secShiftLocationTextF.setText("*Locaiton*");

        secShiftUpdateButton.setText("Update");
        secShiftUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secShiftUpdateButtonActionPerformed(evt);
            }
        });

        secShiftCreateButton.setText("Create");
        secShiftCreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secShiftCreateButtonActionPerformed(evt);
            }
        });

        mainShiftViewButton.setText("View");
        mainShiftViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainShiftViewButtonActionPerformed(evt);
            }
        });

        mainShiftDeleteButton.setText("Delete");
        mainShiftDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainShiftDeleteButtonActionPerformed(evt);
            }
        });

        secShiftViewButton.setText("View");
        secShiftViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secShiftViewButtonActionPerformed(evt);
            }
        });

        secShiftDeleteButton.setText("Delete");
        secShiftDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secShiftDeleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(323, 323, 323)
                        .addComponent(shiftHeading))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(shiftSubHeading2, javax.swing.GroupLayout.PREFERRED_SIZE, 709, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(secShiftViewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(secShiftDeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(36, 36, 36)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(secShiftCreateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(secShiftUpdateButton))
                                        .addComponent(secShiftLocationTextF, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(secShiftShiftTextF, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(secShiftPhoneTextF, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(secShiftNameTextF, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(shiftSubHeading1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(mainShiftViewButton, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                                        .addComponent(mainShiftDeleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGap(36, 36, 36)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(mainShiftCreateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(mainShiftUpdateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addComponent(mainShiftLocationTextF)
                                        .addComponent(mainShiftShiftTextF)
                                        .addComponent(mainShiftPhoneTextF)
                                        .addComponent(mainShiftNameTextF)))))))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(shiftHeading)
                .addGap(44, 44, 44)
                .addComponent(shiftSubHeading1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mainShiftNameTextF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mainShiftPhoneTextF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mainShiftShiftTextF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mainShiftLocationTextF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(mainShiftCreateButton)
                                    .addComponent(mainShiftUpdateButton)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(mainShiftViewButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mainShiftDeleteButton))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(49, 49, 49)
                .addComponent(shiftSubHeading2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(secShiftNameTextF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(secShiftShiftTextF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(secShiftViewButton)
                                    .addComponent(secShiftPhoneTextF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(secShiftDeleteButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(secShiftLocationTextF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(secShiftCreateButton)
                            .addComponent(secShiftUpdateButton)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(67, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void secShiftUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secShiftUpdateButtonActionPerformed
        // TODO add your handling code here:
        String check = "*Name*";
        String selected= secShiftNameTextF.getText();
        if (selected.equals(check)) {
            JOptionPane.showMessageDialog(this, "Please view the data to update");
        }
       else{
       long Phone = Long.parseLong(secShiftPhoneTextF.getText());
         db.secShift.updateOne(
              eq("Name",secShiftNameTextF.getText()),
                combine(set("Name",secShiftNameTextF.getText()), set("Shift", secShiftShiftTextF.getText()),
                        set("Phone",Phone), set("Location",secShiftLocationTextF.getText())));
        tableUpdate(db.secShift,secShiftTable);
        JOptionPane.showMessageDialog(this,"Update Successful");
        clearFields();
        }
        
    }//GEN-LAST:event_secShiftUpdateButtonActionPerformed

    private void mainShiftUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainShiftUpdateButtonActionPerformed
        // TODO add your handling code here:
        String check = "*Name*";
        String selected= mainShiftNameTextF.getText();
        if (selected.equals(check)) {
            JOptionPane.showMessageDialog(this, "Please view the data to update");
        }
       else{
       long Phone = Long.parseLong(mainShiftPhoneTextF.getText());
         db.mainShift.updateOne(
              eq("Name",mainShiftNameTextF.getText()),
                combine(set("Name",mainShiftNameTextF.getText()), set("Shift", mainShiftShiftTextF.getText()),
                        set("Phone",Phone), set("Location",mainShiftLocationTextF.getText())));
        tableUpdate(db.mainShift,mainShiftTable);
        JOptionPane.showMessageDialog(this,"Update Successful");
        clearFields();
        }
    }//GEN-LAST:event_mainShiftUpdateButtonActionPerformed

    private void mainShiftNameTextFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainShiftNameTextFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mainShiftNameTextFActionPerformed

    private void mainShiftPhoneTextFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainShiftPhoneTextFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mainShiftPhoneTextFActionPerformed

    private void secShiftShiftTextFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secShiftShiftTextFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_secShiftShiftTextFActionPerformed

    private void mainShiftCreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainShiftCreateButtonActionPerformed
        // TODO add your handling code here:
        String check ="";
        String selected= mainShiftNameTextF.getText();
        if (selected.equals(check)) {
            JOptionPane.showMessageDialog(this, "Create Unsuccessful : Blank Fields Found");
        }
        else {
        Document mainShift = new Document();
        mainShift.put("Name",mainShiftNameTextF.getText());
        long phone = Long.parseLong(mainShiftPhoneTextF.getText());
        mainShift.put("Phone",phone);
        mainShift.put("Shift",mainShiftShiftTextF.getText());
        mainShift.put("Location",mainShiftLocationTextF.getText());
        db.mainShift.insertOne(mainShift);
        
        JOptionPane.showMessageDialog(this,"Shift Added");
        tableUpdate(db.mainShift,mainShiftTable);
        clearFields();
        }
    }//GEN-LAST:event_mainShiftCreateButtonActionPerformed

    private void mainShiftViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainShiftViewButtonActionPerformed
        // TODO add your handling code here:
         int selectedIndex= mainShiftTable.getSelectedRow();
        if (selectedIndex<0) {
            JOptionPane.showMessageDialog(this, "Select a row to view details");
        }
        else{
        Document dc = selectedRowData(db.mainShift,mainShiftTable,selectedIndex);
        mainShiftResetFields(dc);
       }
    }//GEN-LAST:event_mainShiftViewButtonActionPerformed

    private void mainShiftDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainShiftDeleteButtonActionPerformed
        // TODO add your handling code here:
        int selectedIndex= mainShiftTable.getSelectedRow();
        if (selectedIndex<0) {
            JOptionPane.showMessageDialog(this, "Select a row to delete");
        }
        else{
        String value = mainShiftTable.getValueAt(selectedIndex, 0).toString();
        db.mainShift.deleteOne(eq("Name",value));
        tableUpdate(db.mainShift,mainShiftTable);
        JOptionPane.showMessageDialog(this,"Selected row is deleted");
        clearFields();
        }
    }//GEN-LAST:event_mainShiftDeleteButtonActionPerformed

    private void secShiftViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secShiftViewButtonActionPerformed
        // TODO add your handling code here:
        int selectedIndex= secShiftTable.getSelectedRow();
        if (selectedIndex<0) {
            JOptionPane.showMessageDialog(this, "Select a row to view details");
        }
        else{
        Document dc = selectedRowData(db.secShift,secShiftTable,selectedIndex);
        secShiftResetFields(dc);
       }
        
    }//GEN-LAST:event_secShiftViewButtonActionPerformed

    private void secShiftCreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secShiftCreateButtonActionPerformed
        // TODO add your handling code here:
        String check ="";
        String selected= secShiftNameTextF.getText();
        if (selected.equals(check)) {
            JOptionPane.showMessageDialog(this, "Create Unsuccessful : Blank Fields Found");
        }
        else {
        Document secShift = new Document();
        secShift.put("Name",secShiftNameTextF.getText());
        long phone = Long.parseLong(secShiftPhoneTextF.getText());
        secShift.put("Phone",phone);
        secShift.put("Shift",secShiftShiftTextF.getText());
        secShift.put("Location",secShiftLocationTextF.getText());
        db.secShift.insertOne(secShift);
        
        JOptionPane.showMessageDialog(this,"Shift Added");
        tableUpdate(db.secShift,secShiftTable);
        clearFields();
        }
    }//GEN-LAST:event_secShiftCreateButtonActionPerformed

    private void secShiftDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secShiftDeleteButtonActionPerformed
        // TODO add your handling code here:
        int selectedIndex= secShiftTable.getSelectedRow();
        if (selectedIndex<0) {
            JOptionPane.showMessageDialog(this, "Select a row to delete");
        }
        else{
        String value = secShiftTable.getValueAt(selectedIndex, 0).toString();
        db.secShift.deleteOne(eq("Name",value));
        tableUpdate(db.secShift,secShiftTable);
        JOptionPane.showMessageDialog(this,"Selected row is deleted");
        clearFields();
    }//GEN-LAST:event_secShiftDeleteButtonActionPerformed
   }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton mainShiftCreateButton;
    private javax.swing.JButton mainShiftDeleteButton;
    private javax.swing.JTextField mainShiftLocationTextF;
    private javax.swing.JTextField mainShiftNameTextF;
    private javax.swing.JTextField mainShiftPhoneTextF;
    private javax.swing.JTextField mainShiftShiftTextF;
    private javax.swing.JTable mainShiftTable;
    private javax.swing.JButton mainShiftUpdateButton;
    private javax.swing.JButton mainShiftViewButton;
    private javax.swing.JButton secShiftCreateButton;
    private javax.swing.JButton secShiftDeleteButton;
    private javax.swing.JTextField secShiftLocationTextF;
    private javax.swing.JTextField secShiftNameTextF;
    private javax.swing.JTextField secShiftPhoneTextF;
    private javax.swing.JTextField secShiftShiftTextF;
    private javax.swing.JTable secShiftTable;
    private javax.swing.JButton secShiftUpdateButton;
    private javax.swing.JButton secShiftViewButton;
    private javax.swing.JLabel shiftHeading;
    private javax.swing.JLabel shiftSubHeading1;
    private javax.swing.JLabel shiftSubHeading2;
    // End of variables declaration//GEN-END:variables
}
